/* This is an example input file for the 'Split Bounded Context by Owner' refactoring and shows a small part of the insurance example. */
ContextMap {
	contains CustomerSelfServiceContext

}

/* With a right-click on the 'CustomerSelfServiceContext' bounded context you can execute the 'Split Bounded Context by Owners' refactoring.
 * It will split the existing bounded context according to the two owning teams 'CustomerBackendTeam' and 'CustomerFrontendTeam'.
 */
BoundedContext CustomerSelfServiceContext implements CustomerManagementDomain {
	type = APPLICATION
	domainVisionStatement = "This context represents a web application which allows the customer to login and change basic data records like the address."
	responsibilities = "AddressChange"
	implementationTechnology = "PHP Web Application"
	
	Aggregate CustomerFrontend {
		owner = CustomerFrontendTeam
		
		DomainEvent CustomerAddressChange {
			aggregateRoot
			
			- UserAccount issuer
			- Address changedAddress
		}
	}
	Aggregate Acounts {
		owner = CustomerBackendTeam
		
		Entity UserAccount {
			aggregateRoot
			
			String username
			- Customer accountCustomer
		}
	}
}

/* Team Definitions */
BoundedContext CustomerBackendTeam {
	type = TEAM
}

BoundedContext CustomerFrontendTeam {
	type = TEAM
}

/* Domain & Subdomain Definitions */
Domain InsuranceDomain {
	Subdomain CustomerManagementDomain {
		type = CORE_DOMAIN
		domainVisionStatement = "Subdomain managing everything customer-related."
	}
}
