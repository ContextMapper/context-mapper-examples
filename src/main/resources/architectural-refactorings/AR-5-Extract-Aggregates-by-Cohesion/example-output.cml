/* This is an example output file for the 'Extract Aggregates by Cohesion' refactoring and shows a small part of the insurance example. */
ContextMap {
	contains PolicyManagementContext

}

BoundedContext PolicyManagementContext implements PolicyManagementDomain {
	domainVisionStatement = "This bounded context manages the contracts and policies of the customers."
	responsibilities = "Offers, Contracts, Policies"
	implementationTechnology = "Java, Spring App"
	
	Aggregate Products {
		Entity Product {
			aggregateRoot
			
			- ProductId identifier
			String productName
		}
		ValueObject ProductId {
			int productId key
		}
	}
	Aggregate Contract {
		Entity Contract {
			aggregateRoot
			
			- ContractId identifier
			- Customer client
			- List<Product> products
		}
		ValueObject ContractId {
			int contractId key
		}
		
		Entity Policy {
			int policyNr
			- Contract contract
			BigDecimal price
		}
	}
}

/**
 * New bounded context after applying 'Extract Aggregates by Cohesion' to 'example-input.cml'
 * with the following parameters:
 *  - New bounded context name: 'SalesBoundedContext'
 *  - Selected aggregates: 'Offers'
 */
BoundedContext SalesBoundedContext {
	Aggregate Offers {
		Entity Offer {
			aggregateRoot
			
			int offerId
			- Customer client
			- List<Product> products
			BigDecimal price
		}
	}
}

/* Domain & Subdomain Definitions */
Domain InsuranceDomain {
	Subdomain PolicyManagementDomain {
		type = CORE_DOMAIN
		domainVisionStatement = "Subdomain managing contracts and policies."
	}
}
